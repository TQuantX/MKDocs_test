{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Titre \u2693\ufe0e Hello, je fais un essai point a voir : trois petits chats s'en vont au bois et la routourne a tourn\u00e9 La phrase ci-dessous est vraie, non ? La phrase ci-dessus est fausse ceci est du texte en ligne je ne sais pas ce que cela veut dire print ( \"poupoule est arriv\u00e9e, oh\u00e9 oh\u00e9 !\" ) ceci est du SQL SELECT nom , prenom FROM Employes WHERE poste = 'chef' ;","title":"Acceuil"},{"location":"index.html#titre","text":"Hello, je fais un essai point a voir : trois petits chats s'en vont au bois et la routourne a tourn\u00e9 La phrase ci-dessous est vraie, non ? La phrase ci-dessus est fausse ceci est du texte en ligne je ne sais pas ce que cela veut dire print ( \"poupoule est arriv\u00e9e, oh\u00e9 oh\u00e9 !\" ) ceci est du SQL SELECT nom , prenom FROM Employes WHERE poste = 'chef' ;","title":"Titre"},{"location":"maths.html","text":"lateX \u2693\ufe0e Soit \\(x\\in\\displaystyle\\int_{u=1}^{y=2}dx(\\frac{3}{2} x^2)\\) tel que $ x^2 = 5$ et sans espace : \\(x^2=5\\) \\[\\begin{equation} 3x + 2 = 5 \\Leftrightarrow x = 1 \\end{equation}\\] \\[ - \\sqrt{3} + 2 = 18\\times x^2\\] \\[\\begin{eqnarray} mx - 8 &=& \\frac{7}{3} \\\\ &=& 8 \\displaystyle \\lim_{x= 2} f(x) \\end{eqnarray}\\]","title":"Maths"},{"location":"maths.html#latex","text":"Soit \\(x\\in\\displaystyle\\int_{u=1}^{y=2}dx(\\frac{3}{2} x^2)\\) tel que $ x^2 = 5$ et sans espace : \\(x^2=5\\) \\[\\begin{equation} 3x + 2 = 5 \\Leftrightarrow x = 1 \\end{equation}\\] \\[ - \\sqrt{3} + 2 = 18\\times x^2\\] \\[\\begin{eqnarray} mx - 8 &=& \\frac{7}{3} \\\\ &=& 8 \\displaystyle \\lim_{x= 2} f(x) \\end{eqnarray}\\]","title":"lateX"},{"location":"nsi_terms/chpKNN/KNN.html","text":"Algorithme des \\(k\\) plus proches voisins \u2693\ufe0e Pr\u00e9sentation \u2693\ufe0e ou k-NN ou KNN, de l'anglais k-nearest neighbors. L' apprentissage automatique , \u00e9galement appel\u00e9 apprentissage machine ou apprentissage artificiel et en anglais machine learning , est une forme d'intelligence artificielle (IA) qui permet \u00e0 un syst\u00e8me d' apprendre \u00e0 partir des donn\u00e9es et non \u00e0 l'aide d'une programmation explicite. Cependant, l'apprentissage automatique n'est pas un processus simple. Au fur et \u00e0 mesure que les algorithmes ing\u00e8rent les donn\u00e9es de formation, il devient possible de cr\u00e9er des mod\u00e8les plus pr\u00e9cis bas\u00e9s sur ces donn\u00e9es. L\u2019id\u00e9e d\u2019apprentissage automatique ne date pas d\u2019hier, puisque le terme de machine learning a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l\u2019informaticien am\u00e9ricain Arthur Samuel en 1959. Les algorithmes d\u2019apprentissage automatique ont connu un fort regain d\u2019int\u00e9r\u00eat au d\u00e9but des ann\u00e9es 2000 notamment gr\u00e2ce \u00e0 la quantit\u00e9 de donn\u00e9es disponibles sur internet. L' algorithme des plus k proches voisins appartient \u00e0 la famille des algorithmes d\u2019apprentissage automatique (machine learning). L\u2019algorithme des k plus proches voisins est un algorithme d\u2019apprentissage supervis\u00e9, il est n\u00e9cessaire d\u2019avoir des donn\u00e9es labellis\u00e9es. \u00c0 partir d\u2019un ensemble E de donn\u00e9es labellis\u00e9es, il sera possible de classer (d\u00e9terminer le label) d\u2019une nouvelle donn\u00e9e (donn\u00e9e n\u2019appartenant pas \u00e0 E). On peut pr\u00e9ciser que de nombreuses soci\u00e9t\u00e9s (exemple les GAFAM) utilisent les donn\u00e9es concernant leurs utilisateurs afin de \u201dnourrir\u201d des algorithmes de machine learning qui permettront \u00e0 ces soci\u00e9t\u00e9s d\u2019en savoir toujours plus sur nous et ainsi de mieux cern\u00e9 nos \u201dbesoins\u201d en termes de consommation Activit\u00e9 d\u00e9couverte d'apprentissage automatique : \u2693\ufe0e Vous avez d\u00e9cid\u00e9 d\u2019installer un serveur dans votre entreprise pour pouvoir g\u00e9rer au mieux vos outils num\u00e9riques, et donc notamment vos emails. Comme pour toute bo\u00eete d\u2019emails, il est possible d\u2019en recevoir certains qui s\u2019av\u00e8rent \u00eatre frauduleux, que l\u2019on appelle des spams; votre serveur \u00e9tant priv\u00e9, vous ne disposez pas encore d\u2019outil permettant de les d\u00e9tecter et vous souhaitez ainsi en construire un. 0. Explications : l'algorithme des k plus proches voisins. \u2693\ufe0e L\u2019objectif de ce TP est de cr\u00e9er un outil basique de classification (cat\u00e9gories spam / non spam) faisant intervenir seulement vos comp\u00e9tences algorithmiques, et de vous montrer un premier m\u00e9canisme simple d\u2019apprentissage automatique (dit de \u201cmachine learning\u201d). Probl\u00e9matique : comment faire pour classer un email ? a) Comment peut-on classer un objet suivant ses caract\u00e9ristiques ? En le comparant aux autres ! \u2693\ufe0e Prenons l'exemple d'une situation o\u00f9 vous avez un sac rempli de fruits avec deux possibilit\u00e9s (Abricot ou Banane) et que pour chacune des possibilit\u00e9s, vous connaissez deux caract\u00e9ristiques (X : Poids et Y : Taille). Vous \u00eates alors en mesure de placer les diff\u00e9rents \u00e9l\u00e9ments dans un rep\u00e8re (orthonorm\u00e9) avec les axes repr\u00e9sentant la taille et le poids de l'\u00e9l\u00e9ment, et d'avoir alors un aper\u00e7u des caract\u00e9ristiques de votre sac. Maintenant, imaginons que vous plongez la main dans le sac et d\u00e9couvrez un fruit oubli\u00e9, non class\u00e9 et que pour une certaine raison, vous n'\u00eates pas capable de le sortir mais pouvez d\u00e9terminer son poids et sa taille avec votre main. A quelle cat\u00e9gorie est-ce que ce fruit appartient ? Comme vous le voyez sur l'image, Abricots et Bananes forment des zones/clusters dans votre rep\u00e8re. Vous pourriez alors deviner, suivant o\u00f9 se situe votre fruit inconnu dans ce rep\u00e8re, \u00e0 quel type de fruit il appartient : s'il est au milieu des \u00e9toiles, alors c'est plus probablement un abricot, et s'il est au milieu des triangles, \u00e7a risque d'\u00eatre une banane. Mais ici, entre les deux, ce n'est pas \u00e9vident. Ce que l'on va faire c'est calculer la distance (attention, il existe diff\u00e9rentes d\u00e9finitions de distance, adapt\u00e9es plus ou moins suivant ce que l'on regarde, mais ce sera vu plus tard) dans ce rep\u00e8re entre le fruit inconnu et ses voisins, et voir de quel groupe il est le plus proche en regardant qui sont ses plus proches voisins. Si, comme l'image pr\u00e9c\u00e9dente, on consid\u00e8re son voisin le plus proche (k=1) alors c'est plut\u00f4t un abricot. Si on consid\u00e8re que statistiquement, un seul avis n'est pas suffisant pour se faire une id\u00e9e, on peut prendre un groupe plus \u00e9tendu : k = 1 : le fruit est probablement un Abricot car on ne consid\u00e8re qu'une \u00e9toile. k = 3 : il y a 2 triangles contre 1 \u00e9toile, le fruit serait en fait plus proche des Bananes. k = 7, 3 triangles contre 4 \u00e9toiles, notre a priori est plut\u00f4t de dire que c'est un Abricot. k= ... (doit toujours \u00eatre inf\u00e9rieur ou \u00e9gal au nombre total de voisins) On voit ainsi que le choix k du nombre de plus proches voisins (mais aussi du choix de la d\u00e9finition de la distance) est un param\u00e8tre important \u00e0 prendre en compte car il d\u00e9termine notre d\u00e9cision . Mais ce n'est pour l'instant pas ce qui nous pr\u00e9occupe, \u00e9tablissons d\u00e9j\u00e0 un algorithme pour un k donn\u00e9. Pour d\u00e9terminer la valeur optimale des param\u00e8tres comme k, on scinde g\u00e9n\u00e9ralement les donn\u00e9es en deux : une partie qui servira \u00e0 \"entra\u00eener\" un mod\u00e8le (ce n'est pas exactement le cas ici) suivant les valeurs de param\u00e8tres et l'autre \u00e0 le tester, et on s\u00e9lectionnera le mod\u00e8le et donc les param\u00e8tres qui aura eu le plus de succ\u00e8s dans la phase de test. b) Avec ses plus proches voisins, donc les plus pr\u00e8s ... mais suivant quelle distance ? \u2693\ufe0e Concernant les distances, laquelle choisir ? * si les caract\u00e9ristiques sont des ... mots ou couleur ? si les caract\u00e9ristiques sont des nombres, il en existe plusieurs (voir une liste https://arxiv.org/pdf/1708.04321.pdf) : sur une ligne, la distance entre deux points est donn\u00e9e par la valeur absolue de la diff\u00e9rence des abscisses des deux points : \\(d = |x_A - x_B|\\) mais on peut g\u00e9n\u00e9raliser cela sur un plan : connaissant les coordonn\u00e9es de deux points \\(A(x_{A};y_{A})\\) et \\(B(x_B;y_B)\\) , alors une distance possible est \\(d=|x_A-x_B| + |y_A - y_B|\\) que l'on appelle distance de Manhattan (on ajoute l'\u00e9cart horizontal \u00e0 l'\u00e9cart vertical). ou bien utiliser la distance euclidienne que vous avez vu en seconde : \\(d=\\sqrt{(x_A-x_B)^2+(y_A-y_B)^2}\\) (\u00e0 1 dimension, sur une ligne, on a \\(d=\\sqrt{(x_A-x_B)^2}=|x_A-x_B|\\) les deux d\u00e9finitions donnent la m\u00eame distance) que l'on peut g\u00e9n\u00e9raliser si on consid\u00e8re plus de deux caract\u00e9ristiques : si on consid\u00e8re 3 param\u00e8tres, alors on doit rajouter une dimension \u00e0 notre plan (on parle alors de 3D), on est donc dans l'espace, et notre rep\u00e8re orthonorm\u00e9 devient un ... cube. Warning Connaissant les coordonn\u00e9es de deux points \\(A(x_{A};y_{A};z_{A})\\) et \\(B(x_B;y_B;z_B)\\) , la distance de Manhattan devient $$ d=|x_A-x_B|+|y_A-y_B|+|z_A-z_B| $$ euclidienne devient $$ d=\\sqrt{ (x_A-x_B)^2 + (y_A-y_B)^2 + (z_A-z_B)^2} $$ et on peut alors en suivant cette d\u00e9marche, g\u00e9n\u00e9raliser les distances \u00e0 n'importe quelle dimension (utile si par exemple, on consid\u00e8re dans notre probl\u00e8me les caract\u00e9ristiques : poids, taille, couleur, intelligence, duret\u00e9, ce qui nous oblige \u00e0 calculer des distances dans des espaces \u00e0 5 dimensions) Il existe un nombre cons\u00e9quent de d\u00e9finitions possibles de distances, et on choisit g\u00e9n\u00e9ralement celle qui donne les meilleurs r\u00e9sultats dans la phase de test (une fois les donn\u00e9es d\u00e9coup\u00e9es). c) Quelles sont les \u00e9tapes de l'activit\u00e9 que vous devez r\u00e9aliser et savoir faire ? \u2693\ufe0e Tout au long de cette ativit\u00e9, vous allez pouvoir r\u00e9-exploiter des comp\u00e9tences vues auparavant (utilisation de listes, d'algorithmes de tri sur ces listes, ....), mais aussi r\u00e9fl\u00e9chir \u00e0 comment traiter certains passages. s Quelque soit le jeu de donn\u00e9es, vous devrez : 1. Lire un fichier de csv de donn\u00e9es, encod\u00e9 en utf8, et en ressortir une liste de listes (d\u00e9j\u00e0 vu mais le type de donn\u00e9es \u00e0 obtenir est diff\u00e9rent) 2. Mise en forme des donn\u00e9es : utilisation d'un masque (\u00e0 faire) 3. Trouver la distance entre deux des objets (\u00e0 faire) 4. Faire un algorithme qui sort les k plus proches voisins d'un objet myst\u00e8re dans une liste (\u00e0 faire) 5. Faire un algorithme qui donne le type dominant parmi ces plus proches voisins et en conclut le type probable de l'objet myst\u00e8re (\u00e0 faire) On pourra voir la vid\u00e9o https://www.youtube.com/watch?v=t9LHdng2Kzk pour obtenir un aper\u00e7u global de ce qui est demand\u00e9. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f #votre code icibackslash_newlinebackslash_newlinedef csv_vers_liste_de_listes(nom_fichier_csv : str) -> list :backslash_newline table = [] backslash_newline # \u00e0 compl\u00e9terbackslash_newline backslash_newline backslash_newline backslash_newline return tablebackslash_newlinebackslash_newlinetable_init = csv_vers_liste_de_listes('table.csv')backslash_newlineprint(table_init)backslash_newlinebackslash_newline","title":"KNN"},{"location":"nsi_terms/chpKNN/KNN.html#algorithme-des-k-plus-proches-voisins","text":"","title":"Algorithme des \\(k\\) plus proches voisins"},{"location":"nsi_terms/chpKNN/KNN.html#presentation","text":"ou k-NN ou KNN, de l'anglais k-nearest neighbors. L' apprentissage automatique , \u00e9galement appel\u00e9 apprentissage machine ou apprentissage artificiel et en anglais machine learning , est une forme d'intelligence artificielle (IA) qui permet \u00e0 un syst\u00e8me d' apprendre \u00e0 partir des donn\u00e9es et non \u00e0 l'aide d'une programmation explicite. Cependant, l'apprentissage automatique n'est pas un processus simple. Au fur et \u00e0 mesure que les algorithmes ing\u00e8rent les donn\u00e9es de formation, il devient possible de cr\u00e9er des mod\u00e8les plus pr\u00e9cis bas\u00e9s sur ces donn\u00e9es. L\u2019id\u00e9e d\u2019apprentissage automatique ne date pas d\u2019hier, puisque le terme de machine learning a \u00e9t\u00e9 utilis\u00e9 pour la premi\u00e8re fois par l\u2019informaticien am\u00e9ricain Arthur Samuel en 1959. Les algorithmes d\u2019apprentissage automatique ont connu un fort regain d\u2019int\u00e9r\u00eat au d\u00e9but des ann\u00e9es 2000 notamment gr\u00e2ce \u00e0 la quantit\u00e9 de donn\u00e9es disponibles sur internet. L' algorithme des plus k proches voisins appartient \u00e0 la famille des algorithmes d\u2019apprentissage automatique (machine learning). L\u2019algorithme des k plus proches voisins est un algorithme d\u2019apprentissage supervis\u00e9, il est n\u00e9cessaire d\u2019avoir des donn\u00e9es labellis\u00e9es. \u00c0 partir d\u2019un ensemble E de donn\u00e9es labellis\u00e9es, il sera possible de classer (d\u00e9terminer le label) d\u2019une nouvelle donn\u00e9e (donn\u00e9e n\u2019appartenant pas \u00e0 E). On peut pr\u00e9ciser que de nombreuses soci\u00e9t\u00e9s (exemple les GAFAM) utilisent les donn\u00e9es concernant leurs utilisateurs afin de \u201dnourrir\u201d des algorithmes de machine learning qui permettront \u00e0 ces soci\u00e9t\u00e9s d\u2019en savoir toujours plus sur nous et ainsi de mieux cern\u00e9 nos \u201dbesoins\u201d en termes de consommation","title":"Pr\u00e9sentation"},{"location":"nsi_terms/chpKNN/KNN.html#activite-decouverte-dapprentissage-automatique","text":"Vous avez d\u00e9cid\u00e9 d\u2019installer un serveur dans votre entreprise pour pouvoir g\u00e9rer au mieux vos outils num\u00e9riques, et donc notamment vos emails. Comme pour toute bo\u00eete d\u2019emails, il est possible d\u2019en recevoir certains qui s\u2019av\u00e8rent \u00eatre frauduleux, que l\u2019on appelle des spams; votre serveur \u00e9tant priv\u00e9, vous ne disposez pas encore d\u2019outil permettant de les d\u00e9tecter et vous souhaitez ainsi en construire un.","title":"Activit\u00e9 d\u00e9couverte d'apprentissage automatique :"},{"location":"nsi_terms/chpKNN/KNN.html#0-explications-lalgorithme-des-k-plus-proches-voisins","text":"L\u2019objectif de ce TP est de cr\u00e9er un outil basique de classification (cat\u00e9gories spam / non spam) faisant intervenir seulement vos comp\u00e9tences algorithmiques, et de vous montrer un premier m\u00e9canisme simple d\u2019apprentissage automatique (dit de \u201cmachine learning\u201d). Probl\u00e9matique : comment faire pour classer un email ?","title":"0. Explications : l'algorithme des k plus proches voisins. "},{"location":"nsi_terms/chpKNN/KNN.html#a-comment-peut-on-classer-un-objet-suivant-ses-caracteristiques-en-le-comparant-aux-autres","text":"Prenons l'exemple d'une situation o\u00f9 vous avez un sac rempli de fruits avec deux possibilit\u00e9s (Abricot ou Banane) et que pour chacune des possibilit\u00e9s, vous connaissez deux caract\u00e9ristiques (X : Poids et Y : Taille). Vous \u00eates alors en mesure de placer les diff\u00e9rents \u00e9l\u00e9ments dans un rep\u00e8re (orthonorm\u00e9) avec les axes repr\u00e9sentant la taille et le poids de l'\u00e9l\u00e9ment, et d'avoir alors un aper\u00e7u des caract\u00e9ristiques de votre sac. Maintenant, imaginons que vous plongez la main dans le sac et d\u00e9couvrez un fruit oubli\u00e9, non class\u00e9 et que pour une certaine raison, vous n'\u00eates pas capable de le sortir mais pouvez d\u00e9terminer son poids et sa taille avec votre main. A quelle cat\u00e9gorie est-ce que ce fruit appartient ? Comme vous le voyez sur l'image, Abricots et Bananes forment des zones/clusters dans votre rep\u00e8re. Vous pourriez alors deviner, suivant o\u00f9 se situe votre fruit inconnu dans ce rep\u00e8re, \u00e0 quel type de fruit il appartient : s'il est au milieu des \u00e9toiles, alors c'est plus probablement un abricot, et s'il est au milieu des triangles, \u00e7a risque d'\u00eatre une banane. Mais ici, entre les deux, ce n'est pas \u00e9vident. Ce que l'on va faire c'est calculer la distance (attention, il existe diff\u00e9rentes d\u00e9finitions de distance, adapt\u00e9es plus ou moins suivant ce que l'on regarde, mais ce sera vu plus tard) dans ce rep\u00e8re entre le fruit inconnu et ses voisins, et voir de quel groupe il est le plus proche en regardant qui sont ses plus proches voisins. Si, comme l'image pr\u00e9c\u00e9dente, on consid\u00e8re son voisin le plus proche (k=1) alors c'est plut\u00f4t un abricot. Si on consid\u00e8re que statistiquement, un seul avis n'est pas suffisant pour se faire une id\u00e9e, on peut prendre un groupe plus \u00e9tendu : k = 1 : le fruit est probablement un Abricot car on ne consid\u00e8re qu'une \u00e9toile. k = 3 : il y a 2 triangles contre 1 \u00e9toile, le fruit serait en fait plus proche des Bananes. k = 7, 3 triangles contre 4 \u00e9toiles, notre a priori est plut\u00f4t de dire que c'est un Abricot. k= ... (doit toujours \u00eatre inf\u00e9rieur ou \u00e9gal au nombre total de voisins) On voit ainsi que le choix k du nombre de plus proches voisins (mais aussi du choix de la d\u00e9finition de la distance) est un param\u00e8tre important \u00e0 prendre en compte car il d\u00e9termine notre d\u00e9cision . Mais ce n'est pour l'instant pas ce qui nous pr\u00e9occupe, \u00e9tablissons d\u00e9j\u00e0 un algorithme pour un k donn\u00e9. Pour d\u00e9terminer la valeur optimale des param\u00e8tres comme k, on scinde g\u00e9n\u00e9ralement les donn\u00e9es en deux : une partie qui servira \u00e0 \"entra\u00eener\" un mod\u00e8le (ce n'est pas exactement le cas ici) suivant les valeurs de param\u00e8tres et l'autre \u00e0 le tester, et on s\u00e9lectionnera le mod\u00e8le et donc les param\u00e8tres qui aura eu le plus de succ\u00e8s dans la phase de test.","title":"a) Comment peut-on classer un objet suivant ses caract\u00e9ristiques ? En le comparant aux autres !"},{"location":"nsi_terms/chpKNN/KNN.html#b-avec-ses-plus-proches-voisins-donc-les-plus-pres-mais-suivant-quelle-distance","text":"Concernant les distances, laquelle choisir ? * si les caract\u00e9ristiques sont des ... mots ou couleur ? si les caract\u00e9ristiques sont des nombres, il en existe plusieurs (voir une liste https://arxiv.org/pdf/1708.04321.pdf) : sur une ligne, la distance entre deux points est donn\u00e9e par la valeur absolue de la diff\u00e9rence des abscisses des deux points : \\(d = |x_A - x_B|\\) mais on peut g\u00e9n\u00e9raliser cela sur un plan : connaissant les coordonn\u00e9es de deux points \\(A(x_{A};y_{A})\\) et \\(B(x_B;y_B)\\) , alors une distance possible est \\(d=|x_A-x_B| + |y_A - y_B|\\) que l'on appelle distance de Manhattan (on ajoute l'\u00e9cart horizontal \u00e0 l'\u00e9cart vertical). ou bien utiliser la distance euclidienne que vous avez vu en seconde : \\(d=\\sqrt{(x_A-x_B)^2+(y_A-y_B)^2}\\) (\u00e0 1 dimension, sur une ligne, on a \\(d=\\sqrt{(x_A-x_B)^2}=|x_A-x_B|\\) les deux d\u00e9finitions donnent la m\u00eame distance) que l'on peut g\u00e9n\u00e9raliser si on consid\u00e8re plus de deux caract\u00e9ristiques : si on consid\u00e8re 3 param\u00e8tres, alors on doit rajouter une dimension \u00e0 notre plan (on parle alors de 3D), on est donc dans l'espace, et notre rep\u00e8re orthonorm\u00e9 devient un ... cube. Warning Connaissant les coordonn\u00e9es de deux points \\(A(x_{A};y_{A};z_{A})\\) et \\(B(x_B;y_B;z_B)\\) , la distance de Manhattan devient $$ d=|x_A-x_B|+|y_A-y_B|+|z_A-z_B| $$ euclidienne devient $$ d=\\sqrt{ (x_A-x_B)^2 + (y_A-y_B)^2 + (z_A-z_B)^2} $$ et on peut alors en suivant cette d\u00e9marche, g\u00e9n\u00e9raliser les distances \u00e0 n'importe quelle dimension (utile si par exemple, on consid\u00e8re dans notre probl\u00e8me les caract\u00e9ristiques : poids, taille, couleur, intelligence, duret\u00e9, ce qui nous oblige \u00e0 calculer des distances dans des espaces \u00e0 5 dimensions) Il existe un nombre cons\u00e9quent de d\u00e9finitions possibles de distances, et on choisit g\u00e9n\u00e9ralement celle qui donne les meilleurs r\u00e9sultats dans la phase de test (une fois les donn\u00e9es d\u00e9coup\u00e9es).","title":"b) Avec ses plus proches voisins, donc les plus pr\u00e8s ... mais suivant quelle distance ?"},{"location":"nsi_terms/chpKNN/KNN.html#c-quelles-sont-les-etapes-de-lactivite-que-vous-devez-realiser-et-savoir-faire","text":"Tout au long de cette ativit\u00e9, vous allez pouvoir r\u00e9-exploiter des comp\u00e9tences vues auparavant (utilisation de listes, d'algorithmes de tri sur ces listes, ....), mais aussi r\u00e9fl\u00e9chir \u00e0 comment traiter certains passages. s Quelque soit le jeu de donn\u00e9es, vous devrez : 1. Lire un fichier de csv de donn\u00e9es, encod\u00e9 en utf8, et en ressortir une liste de listes (d\u00e9j\u00e0 vu mais le type de donn\u00e9es \u00e0 obtenir est diff\u00e9rent) 2. Mise en forme des donn\u00e9es : utilisation d'un masque (\u00e0 faire) 3. Trouver la distance entre deux des objets (\u00e0 faire) 4. Faire un algorithme qui sort les k plus proches voisins d'un objet myst\u00e8re dans une liste (\u00e0 faire) 5. Faire un algorithme qui donne le type dominant parmi ces plus proches voisins et en conclut le type probable de l'objet myst\u00e8re (\u00e0 faire) On pourra voir la vid\u00e9o https://www.youtube.com/watch?v=t9LHdng2Kzk pour obtenir un aper\u00e7u global de ce qui est demand\u00e9. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f #votre code icibackslash_newlinebackslash_newlinedef csv_vers_liste_de_listes(nom_fichier_csv : str) -> list :backslash_newline table = [] backslash_newline # \u00e0 compl\u00e9terbackslash_newline backslash_newline backslash_newline backslash_newline return tablebackslash_newlinebackslash_newlinetable_init = csv_vers_liste_de_listes('table.csv')backslash_newlineprint(table_init)backslash_newlinebackslash_newline","title":"c) Quelles sont les \u00e9tapes de l'activit\u00e9 que vous devez r\u00e9aliser et savoir faire ?"},{"location":"python_test/python1.html","text":"Terminal et IDE dans Mkdocs \u2693\ufe0e Introduction \u2693\ufe0e Afin d'\u00e9crire un cours interactif utilisant Mkdocs, le besoin s'est fait sentir de pouvoir \u00e9crire directement des scripts en ligne : dans le navigateur sans iframe sans cookie sans inscription Solution La solution existe et s'appelle Pyodide . Pyodide utilise WebAssembly pour faire le lien entre Python et Javascript et proposer un environnement permettant de manipuler le DOM avec Python, ou de manipuler Python avec Javascript. Un hic La documentation quasi-absente ou r\u00e9serv\u00e9e aux initi\u00e9s du projet Pyodide... Prise en main \u2693\ufe0e Je vous propose ici des commandes Markdown permettant de cr\u00e9er un terminal ainsi qu'un IDE gr\u00e2ce au plugin macro . Syntaxe Markdown \u2693\ufe0e Vite vite ! Le r\u00e9sultat, histoire d'app\u00e2ter le chaland. La syntaxe Terminal {{ terminal() }} Cette commande cr\u00e9e un terminal vide. L'auto-compl\u00e9tion avec Tab et le rappel de l'historique (avec Ctrl \uff0b R ) sont possibles. >>> IDE vide {{ IDE() }} Cette commande cr\u00e9e un IDE (~ Thonny) vide. La fl\u00e8che permet de lancer le code tap\u00e9 dans la zone de saisie (avec les num\u00e9ros de ligne). La zone de saisie se redimensionne automatiquement et autorise l'auto-compl\u00e9tion de type snippet avec Tab . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f IDE vertical {{ IDEv() }} Cette commande cr\u00e9e un IDE vide, avec division verticale. L'engrenage permet de lancer le code tap\u00e9 dans la zone de saisie (avec les num\u00e9ros de ligne). La zone de saisie se redimensionne automatiquement et autorise l'auto-compl\u00e9tion de type snippet avec Tab . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f IDE avec code {{ IDE('foo/bar/nom_de_fichier') }} Cette commande charge le fichier nom_de_fichier.py dans un IDE. Le fichier doit \u00eatre dans docs/scripts/foo/bar/ . Ne pas oublier les guillemets. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f benchmark = ['longueur([])==0', 'longueur([1,3,5,5])==4', 'longueur([0]*100)==100']backslash_newline \ud83d\udec2 5/5 L = [5,3,4,1]backslash_newlinebackslash_newlinedef longueur(L: list) -> int:backslash_newline return backslash_newline def longueur(L: list) -> int:backslash_newline return len(L)backslash_newline IDE vertical avec code {{ IDEv('foo/bar/nom_de_fichier') }} Cette commande charge le fichier nom_de_fichier dans un IDE avec division verticale. Le fichier doit \u00eatre dans docs/scripts/foo/bar/ . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f benchmark = ['longueur([])==0', 'longueur([1,3,5,5])==4', 'longueur([0]*100)==100']backslash_newline \ud83d\udec2 5/5 L = [5,3,4,1]backslash_newlinebackslash_newlinedef longueur(L: list) -> int:backslash_newline return backslash_newline def longueur(L: list) -> int:backslash_newline return len(L)backslash_newline D\u00e9tails techniques Tous les IDE et les terminaux partagent le m\u00eame namespace . On peut donc acc\u00e9der \u00e0 n'importe quelle fonction cr\u00e9\u00e9e dans n'importe quel IDE ou terminal. C'est un comportement voulu qui a des avantages et des inconv\u00e9nients. Am\u00e9lioration notable Pour que les IDE fonctionnent, il faut absolument indiquer {{ IDE('nom_de_fichier', -1) }} sur le dernier IDE de la page. Une solution plus \u00e9l\u00e9gante modifiant le template Jinja2 my_theme_customizations/main.html est maintenant utilis\u00e9e. Plus besoin d'indiquer le dernier IDE ! Exemples \u2693\ufe0e L'exemple ci-dessous, obtenu avec {{ IDEv('scripts/exo2') }} . N'h\u00e9sitez pas \u00e0 modifier le code pour calculer la moyenne, l'\u00e9cart-type, afficher cela dans le terminal etc. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f b1 = ['somme([]) == None', 'somme([1]) == 1', 'somme([1,2]) == 3', 'somme([-1,1]) == 0']backslash_newlineb2 = ['sommation([1]) == 1', 'sommation([1,2]) == 3', 'sommation([-1,1]) == 0']backslash_newlinebackslash_newlinebenchmark = (b1, b2)backslash_newline \ud83d\udec2 5/5 def sommation(T: list) -> int:backslash_newline a = 0backslash_newline for nombre in T:backslash_newline a = a + nombrebackslash_newline return abackslash_newlinebackslash_newlinedef somme(L: list) -> None or int:backslash_newline return None if len(L) == 0 else sum(L)backslash_newline def somme(L: list[int]) -> int:backslash_newline return None if len(L) == 0 else sum(L)backslash_newline L'exemple ci-dessous a \u00e9t\u00e9 obtenu avec {{ IDE('scripts/algo_glouton') }} . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f # dictionnaire :backslash_newline# - cl\u00e9 : nom de l'objetbackslash_newline# - valeur : tableau [poids, prix]backslash_newlineinventaire = {\"A\": [13,700], \"B\": [12,650], \"C\": [6,250], \"D\": [6,400],\"E\": [5, 100]}backslash_newlinebackslash_newline# Calcule la valeur massique en divisant la 2\u00e8me valeur du tableau par la premi\u00e8rebackslash_newline# on ajoute cela \u00e0 la valeur du dictionnairebackslash_newlinefor objet, (poids, prix) in inventaire.items():backslash_newline inventaire[objet].append(prix/poids)backslash_newlinebackslash_newline# Trie le tableau en ordre d\u00e9croissant suivant la valeur massique.backslash_newlinedef f(dico: dict, col = 2):backslash_newline tableau_tri\u00e9 = sorted(dico.items(), key = lambda a: a[1][col], reverse=True)backslash_newline return {cl\u00e9:valeur for cl\u00e9, valeur in tableau_tri\u00e9}backslash_newlinebackslash_newlinebackslash_newlineinventaire = f(inventaire, 2)backslash_newlinebackslash_newlinepoids_max = 30backslash_newlinebackslash_newline# Algorithme gloutonbackslash_newlinedef gloutonnerie(inventaire : dict, poids_max:int=30):backslash_newline sac_a_dos = []backslash_newline poids_sac = 0backslash_newline for objet, (poids, prix, v_massique) in inventaire.items():backslash_newline if poids_sac + poids <= poids_max:backslash_newline sac_a_dos.append(objet)backslash_newline poids_sac += poidsbackslash_newline return sac_a_dos, poids_sacbackslash_newlinebackslash_newlineprint(gloutonnerie(inventaire, poids_max))backslash_newlinebackslash_newlinebackslash_newline Installation \u2693\ufe0e L'installation demande de modifier : le fichier YML mkdocs.yml ; le fichier de macro main.py ; d'ajouter : un dossier my_theme_customizations/ \u00e0 la racine du projet Mkdocs ; un template HTML my_theme_customizations/main.html ; un fichier CSS docs/xtra/stylesheets/pyoditeur.css ; deux fichiers Javascript docs/xtra/javascripts/interpreter.js et my_theme_customizations/js/ide.js ; Fichier YML mkdocs.yml \u2693\ufe0e Ajoutez les lignes surlign\u00e9es dans votre fichier mkdocs.yml . Fichier macro Python main.py \u2693\ufe0e \u00c0 votre fichier main.py , ajoutez les lignes du fichier main.py . Cr\u00e9ation du dossier custom_dir \u2693\ufe0e N'oubliez pas de cr\u00e9er le dossier my_theme_customizations/ \u00e0 la racine du projet Mkdocs . Dans ce dossier, ajoutez le template Jinja main.html : Fichier CSS pyoditeur.css \u2693\ufe0e Afin de coller au th\u00e8me du site, recopiez et ajoutez le fichier pyoditeur.css au dossier docs/xtra/stylesheets/ . Fichiers javascripts interpreter.js et ide.js \u2693\ufe0e Deux fichiers Javascript interpreter.js et ide.js sont n\u00e9cessaires : interpreter.js doit \u00eatre plac\u00e9 dans le dossier : docs/xtra/javascripts/ ; ide.js doit \u00eatre plac\u00e9 dans le dossier : my_theme_customizations/js/ide.js . Et c'est tout !","title":"python1"},{"location":"python_test/python1.html#terminal-et-ide-dans-mkdocs","text":"","title":"Terminal et IDE dans Mkdocs"},{"location":"python_test/python1.html#introduction","text":"Afin d'\u00e9crire un cours interactif utilisant Mkdocs, le besoin s'est fait sentir de pouvoir \u00e9crire directement des scripts en ligne : dans le navigateur sans iframe sans cookie sans inscription Solution La solution existe et s'appelle Pyodide . Pyodide utilise WebAssembly pour faire le lien entre Python et Javascript et proposer un environnement permettant de manipuler le DOM avec Python, ou de manipuler Python avec Javascript. Un hic La documentation quasi-absente ou r\u00e9serv\u00e9e aux initi\u00e9s du projet Pyodide...","title":"Introduction"},{"location":"python_test/python1.html#prise-en-main","text":"Je vous propose ici des commandes Markdown permettant de cr\u00e9er un terminal ainsi qu'un IDE gr\u00e2ce au plugin macro .","title":"Prise en main"},{"location":"python_test/python1.html#syntaxe-markdown","text":"Vite vite ! Le r\u00e9sultat, histoire d'app\u00e2ter le chaland. La syntaxe Terminal {{ terminal() }} Cette commande cr\u00e9e un terminal vide. L'auto-compl\u00e9tion avec Tab et le rappel de l'historique (avec Ctrl \uff0b R ) sont possibles. >>> IDE vide {{ IDE() }} Cette commande cr\u00e9e un IDE (~ Thonny) vide. La fl\u00e8che permet de lancer le code tap\u00e9 dans la zone de saisie (avec les num\u00e9ros de ligne). La zone de saisie se redimensionne automatiquement et autorise l'auto-compl\u00e9tion de type snippet avec Tab . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f IDE vertical {{ IDEv() }} Cette commande cr\u00e9e un IDE vide, avec division verticale. L'engrenage permet de lancer le code tap\u00e9 dans la zone de saisie (avec les num\u00e9ros de ligne). La zone de saisie se redimensionne automatiquement et autorise l'auto-compl\u00e9tion de type snippet avec Tab . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f IDE avec code {{ IDE('foo/bar/nom_de_fichier') }} Cette commande charge le fichier nom_de_fichier.py dans un IDE. Le fichier doit \u00eatre dans docs/scripts/foo/bar/ . Ne pas oublier les guillemets. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f benchmark = ['longueur([])==0', 'longueur([1,3,5,5])==4', 'longueur([0]*100)==100']backslash_newline \ud83d\udec2 5/5 L = [5,3,4,1]backslash_newlinebackslash_newlinedef longueur(L: list) -> int:backslash_newline return backslash_newline def longueur(L: list) -> int:backslash_newline return len(L)backslash_newline IDE vertical avec code {{ IDEv('foo/bar/nom_de_fichier') }} Cette commande charge le fichier nom_de_fichier dans un IDE avec division verticale. Le fichier doit \u00eatre dans docs/scripts/foo/bar/ . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f benchmark = ['longueur([])==0', 'longueur([1,3,5,5])==4', 'longueur([0]*100)==100']backslash_newline \ud83d\udec2 5/5 L = [5,3,4,1]backslash_newlinebackslash_newlinedef longueur(L: list) -> int:backslash_newline return backslash_newline def longueur(L: list) -> int:backslash_newline return len(L)backslash_newline D\u00e9tails techniques Tous les IDE et les terminaux partagent le m\u00eame namespace . On peut donc acc\u00e9der \u00e0 n'importe quelle fonction cr\u00e9\u00e9e dans n'importe quel IDE ou terminal. C'est un comportement voulu qui a des avantages et des inconv\u00e9nients. Am\u00e9lioration notable Pour que les IDE fonctionnent, il faut absolument indiquer {{ IDE('nom_de_fichier', -1) }} sur le dernier IDE de la page. Une solution plus \u00e9l\u00e9gante modifiant le template Jinja2 my_theme_customizations/main.html est maintenant utilis\u00e9e. Plus besoin d'indiquer le dernier IDE !","title":"Syntaxe Markdown"},{"location":"python_test/python1.html#exemples","text":"L'exemple ci-dessous, obtenu avec {{ IDEv('scripts/exo2') }} . N'h\u00e9sitez pas \u00e0 modifier le code pour calculer la moyenne, l'\u00e9cart-type, afficher cela dans le terminal etc. \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f b1 = ['somme([]) == None', 'somme([1]) == 1', 'somme([1,2]) == 3', 'somme([-1,1]) == 0']backslash_newlineb2 = ['sommation([1]) == 1', 'sommation([1,2]) == 3', 'sommation([-1,1]) == 0']backslash_newlinebackslash_newlinebenchmark = (b1, b2)backslash_newline \ud83d\udec2 5/5 def sommation(T: list) -> int:backslash_newline a = 0backslash_newline for nombre in T:backslash_newline a = a + nombrebackslash_newline return abackslash_newlinebackslash_newlinedef somme(L: list) -> None or int:backslash_newline return None if len(L) == 0 else sum(L)backslash_newline def somme(L: list[int]) -> int:backslash_newline return None if len(L) == 0 else sum(L)backslash_newline L'exemple ci-dessous a \u00e9t\u00e9 obtenu avec {{ IDE('scripts/algo_glouton') }} . \u25b6\ufe0f \u2935\ufe0f \u2934\ufe0f # dictionnaire :backslash_newline# - cl\u00e9 : nom de l'objetbackslash_newline# - valeur : tableau [poids, prix]backslash_newlineinventaire = {\"A\": [13,700], \"B\": [12,650], \"C\": [6,250], \"D\": [6,400],\"E\": [5, 100]}backslash_newlinebackslash_newline# Calcule la valeur massique en divisant la 2\u00e8me valeur du tableau par la premi\u00e8rebackslash_newline# on ajoute cela \u00e0 la valeur du dictionnairebackslash_newlinefor objet, (poids, prix) in inventaire.items():backslash_newline inventaire[objet].append(prix/poids)backslash_newlinebackslash_newline# Trie le tableau en ordre d\u00e9croissant suivant la valeur massique.backslash_newlinedef f(dico: dict, col = 2):backslash_newline tableau_tri\u00e9 = sorted(dico.items(), key = lambda a: a[1][col], reverse=True)backslash_newline return {cl\u00e9:valeur for cl\u00e9, valeur in tableau_tri\u00e9}backslash_newlinebackslash_newlinebackslash_newlineinventaire = f(inventaire, 2)backslash_newlinebackslash_newlinepoids_max = 30backslash_newlinebackslash_newline# Algorithme gloutonbackslash_newlinedef gloutonnerie(inventaire : dict, poids_max:int=30):backslash_newline sac_a_dos = []backslash_newline poids_sac = 0backslash_newline for objet, (poids, prix, v_massique) in inventaire.items():backslash_newline if poids_sac + poids <= poids_max:backslash_newline sac_a_dos.append(objet)backslash_newline poids_sac += poidsbackslash_newline return sac_a_dos, poids_sacbackslash_newlinebackslash_newlineprint(gloutonnerie(inventaire, poids_max))backslash_newlinebackslash_newlinebackslash_newline","title":"Exemples"},{"location":"python_test/python1.html#installation","text":"L'installation demande de modifier : le fichier YML mkdocs.yml ; le fichier de macro main.py ; d'ajouter : un dossier my_theme_customizations/ \u00e0 la racine du projet Mkdocs ; un template HTML my_theme_customizations/main.html ; un fichier CSS docs/xtra/stylesheets/pyoditeur.css ; deux fichiers Javascript docs/xtra/javascripts/interpreter.js et my_theme_customizations/js/ide.js ;","title":"Installation"},{"location":"python_test/python1.html#fichier-yml-mkdocsyml","text":"Ajoutez les lignes surlign\u00e9es dans votre fichier mkdocs.yml .","title":"Fichier YML mkdocs.yml"},{"location":"python_test/python1.html#fichier-macro-python-mainpy","text":"\u00c0 votre fichier main.py , ajoutez les lignes du fichier main.py .","title":"Fichier macro Python main.py"},{"location":"python_test/python1.html#creation-du-dossier-custom_dir","text":"N'oubliez pas de cr\u00e9er le dossier my_theme_customizations/ \u00e0 la racine du projet Mkdocs . Dans ce dossier, ajoutez le template Jinja main.html :","title":"Cr\u00e9ation du dossier custom_dir"},{"location":"python_test/python1.html#fichier-css-pyoditeurcss","text":"Afin de coller au th\u00e8me du site, recopiez et ajoutez le fichier pyoditeur.css au dossier docs/xtra/stylesheets/ .","title":"Fichier CSS pyoditeur.css"},{"location":"python_test/python1.html#fichiers-javascripts-interpreterjs-et-idejs","text":"Deux fichiers Javascript interpreter.js et ide.js sont n\u00e9cessaires : interpreter.js doit \u00eatre plac\u00e9 dans le dossier : docs/xtra/javascripts/ ; ide.js doit \u00eatre plac\u00e9 dans le dossier : my_theme_customizations/js/ide.js . Et c'est tout !","title":"Fichiers javascripts interpreter.js et ide.js"}]}